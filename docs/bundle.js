(()=>{"use strict";const n={getPage(){const n=(()=>{const{hash:n}=window.location;return n.includes("/")?n.split("/"):null})();return null==n||""===n[1]?"/":n[1]}},a={tambahKategori(n,a){this.kategori.push({nama:n,bobot:a})},tambahAlternatif(n){this.alternatif.push(n)},deleteKategori(n){this.kategori.splice(n,1)},deleteAlternatif(n){this.alternatif.splice(n,1)},kategori:[{nama:"RAM",bobot:5},{nama:"Storage",bobot:4},{nama:"Baterai",bobot:5}],alternatif:[["iPhone X",4,128,2e3],["iPhone 8",2,64,5020],["Pocophone X3",12,256,5020]]},e=(n="arrow_back")=>`\n    <a onclick="window.history.back()" id="headerbackbutton"><span class='material-icons block'>${n}</span></a>\n  `,t=(n="Simpan")=>`\n      <button id="headeractionbutton">${n}</button>\n    `,i=({title:n="aaaaa",backButton:a='<div class="blankbackbutton"></div>',actionButton:e=""})=>`\n    <header>\n    ${a}\n    <h1>${n}</h1>\n    ${e}\n    </header>\n  `,o=n=>`\n    <nav class='bottomfloat flex space-around'>\n\n    <a href='#/kategori' class='nodecor-a ${1===n?"accented":""}'>\n    <div class='flex-column center padding-8'>\n    <span class='material-icons'>\n    dashboard\n    </span>\n    Kriteria\n    </div>\n    </a>\n\n    <a href='#/alternatif' class='nodecor-a ${2===n?"accented":""}'>\n    <div class='flex-column center padding-8'>\n    <span class='material-icons'>\n    article\n    </span>\n    Alternatif\n    </div>\n    </a>\n\n    <a href='#/laporan' class='nodecor-a ${3===n?"accented":""}'>\n    <div class='flex-column center padding-8'>\n    <span class='material-icons'>\n    calendar_view_month\n    </span>\n    Laporan\n    </div>\n    </a>\n\n    </nav>\n  `,r={render:()=>`\n    ${i({backButton:e(),title:"Alternatif",actionButton:t("Tambah Alternatif")})}\n    <main>\n    </main>\n    \n    ${o(2)}\n    `,afterRender(){document.querySelector("#headeractionbutton").addEventListener("click",(()=>{window.location.hash="#/tambahalternatif"}));const n=document.querySelector("main");let e="";a.alternatif.forEach((n=>{const a=(n=>{let a="";return n.slice(1).forEach(((n,e)=>{a+=`\n    <div class='flex-column'>\n        C${e+1}\n        <h1>${n}</h1>\n        </div>\n    <div>&nbsp&nbsp&nbsp&nbsp&nbsp</div>\n    `})),a})(n);e+=`\n        <div class='flex space-around'>\n        <div class='flex-column'>\n        Nama\n        <h1>${n[0]}</h1>\n        </div>\n        <div>&nbsp&nbsp&nbsp&nbsp&nbsp</div>\n        ${a}\n        <button class='delete'>\n        <span class='material-icons'>\n        delete\n        </span>\n        </button>\n        </div>\n        <br>\n      `})),n.innerHTML=e,document.querySelectorAll("button.delete").forEach(((n,e)=>{n.addEventListener("click",(()=>{a.deleteAlternatif(e),this.afterRender()}))}))}},s={render:()=>`\n    ${i({backButton:e(),title:"Kriteria",actionButton:t("Tambah kriteria")})}\n    <main>\n    </main>\n    \n    ${o(1)}\n    `,afterRender(){document.querySelector("#headeractionbutton").addEventListener("click",(()=>{window.location.hash="#/tambahkategori"}));const n=document.querySelector("main");let e="";a.kategori.forEach((n=>{e+=`\n        <div class='flex space-around'>\n        <div class='flex'>\n        <div class='flex-column'>\n        Kriteria\n        <h1>${n.nama}</h1>\n        </div>\n        <div>&nbsp&nbsp&nbsp&nbsp&nbsp</div>\n        <div class='flex-column'>\n        Bobot\n        <h1>${n.bobot}</h1>\n        </div>\n        </div>\n        <button class='delete'>\n        <span class='material-icons'>\n        delete\n        </span>\n        </button>\n        </div>\n        <br>\n      `})),n.innerHTML=e,document.querySelectorAll("button.delete").forEach(((n,e)=>{n.addEventListener("click",(()=>{a.deleteKategori(e),this.afterRender()}))}))}},l=n=>{let a="";return n.forEach((n=>{a+=`\n    <div class='flex-column'>\n        <h1>${n}</h1>\n        </div>\n        <div>&nbsp&nbsp&nbsp&nbsp&nbsp</div>\n    `})),a},d={render:()=>`\n    ${i({backButton:e(),title:"Laporan"})}\n    <main>\n    </main>\n\n    ${o(3)}\n    `,afterRender(){const n=document.querySelector("main"),{alternatif:e}=a;let t="<h2>Matrik Awal</h2><hr>";e.forEach((n=>{t+=`\n      <div class='flex space-evenly'>\n      ${l(n)}\n      </div>\n      `}));let i="<h2>Matrik Ternormalisasi</h2><hr>";const o=[];a.kategori.forEach(((n,e)=>{o.push((n=>{const e=[];return a.alternatif.forEach((a=>{e.push(a[n+1])})),Math.max.apply(Math,e)})(e))}));const r=[];e.forEach((n=>{const a=(n=>{const a=[];return a.push(n[0]),n.slice(1).forEach(((n,e)=>{let t=n/o[e];t=parseFloat(t).toFixed(2),a.push(t)})),a})(n);r.push(a)})),r.forEach((n=>{i+=`\n      <div class='flex space-evenly'>\n      ${l(n)}\n      </div>\n      `}));const s=[];a.kategori.forEach((n=>{s.push(n.bobot)}));let d=0;s.forEach((n=>{d+=n}));const c=[];s.forEach((n=>{const a=parseFloat(n/d).toFixed(2);c.push(a)}));let u="<h2>Matrik Terbobot</h2><hr>";const h=[];r.forEach((n=>{const a=(n=>{const a=[];return a.push(n[0]),n.slice(1).forEach(((n,e)=>{let t=n*c[e];t=parseFloat(t).toFixed(2),a.push(t)})),a})(n);h.push(a)})),h.forEach((n=>{u+=`\n      <div class='flex space-evenly'>\n      ${l(n)}\n      </div>\n      `}));let m="<h2>Hasil Ranking</h2><hr>";const p=h.map((n=>{const a=[];a[0]=n[0];let e=0;return n.slice(1).forEach((n=>{e+=parseFloat(n)})),a[1]=e.toFixed(3),a}));p.sort(((n,a)=>a[1]-n[1])),p.forEach((n=>{m+=`\n      <div class='flex space-evenly'>\n      ${l(n)}\n      </div>\n      `})),n.innerHTML=t+i+u+m}},c={render:()=>`\n    ${i({title:"Login"})}\n    <main>\n    <h1>Sistem Pendukung Keputusan ( SPK ) Pemilihan Handphone Terbaik dengan Metode SAW berbasis Web Javascript</h1>\n    <form id='login'>\n    <input name='id' type='text' placeholder='Id'>\n    <input name='password' type='password' placeholder='Password'>\n    </form>\n    <button>Login</button>\n    </main>\n    `,afterRender(){document.querySelector("button").addEventListener("click",(()=>{const n=document.forms.login;"hafiz"!==n.id.value||"hafiz100st"!==n.password.value?window.alert("Password yang anda salah!"):window.location.hash="#/welcome"}))}},u={render(){let n="";return a.kategori.forEach(((a,e)=>{n+=`\n      <input name='c${e+1}' type='number' placeholder='${a.nama}'></input>\n      `})),`\n    ${i({backButton:e(),title:"Tambah Alternatif",actionButton:t("Simpan")})}\n    <main>\n    <form id='tambahalternatif'>\n    <input name='nama' type='text' placeholder='Nama Alternatif'></input>\n    ${n}\n    </form>\n    </main>\n    `},afterRender(){document.querySelector("#headeractionbutton").addEventListener("click",(()=>{const n=document.querySelectorAll("input");if(this.validateForm(n)){const e=[];n.forEach((n=>{e.push(n.value)})),a.tambahAlternatif(e),window.history.back()}}))},validateForm:n=>(n.forEach((n=>{if(""===n.value)return!1})),!0)},h={render:()=>`\n    ${i({backButton:e(),title:"Tambah Kriteria",actionButton:t("Simpan")})}\n    <main>\n    <form id='tambahkategori'>\n    <input name='nama' type='text' placeholder='Nama Kriteria'></input>\n    <select name='bobot'>\n      <option value=1>Bobot: 1\n      </option>\n      <option value=2>Bobot: 2\n      </option>\n      <option value=3>Bobot: 3\n      </option>\n      <option value=4>Bobot: 4\n      </option>\n      <option value=5>Bobot: 5\n      </option>\n    </select>\n    </form>\n    </main>\n    `,afterRender(){document.querySelector("#headeractionbutton").addEventListener("click",(()=>{const n=document.forms.tambahkategori;""!==n.nama.value&&(a.tambahKategori(n.nama.value,n.bobot.value),window.history.back())}))}},m=`\n<main>\n<h2>Metode Simple Additive Weighting</h2>\nFishburn (1967) dan MacCrimmon (1968). Metode Simple Additive Weighting (SAW) sering juga dikenal istilah metode penjumlahan terbobot. Konsep dasar metode SAW adalah mencari penjumlahan terbobot dari rating kinerja pada setiap alternatif pada semua atribut.\n\nMetode SAW membutuhkan proses normalisasi matriks keputusan (X) ke suatu skala yang dapat diperbandingkan dengan semua rating alternatif yang ada.\n\nMenurut Fachmi Basyaib (2006) Metode Simple Additive Weighting (SAW) merupakan metode paling dikenal dan paling banyak digunakan orang dalam menghadapi situasi Multi Attribute Decision Making (MADM). metode ini mengharuskan pembuat keputusan menentukan bobot bagi setiap attribut. skor total untuk sebuah alternatif diperoleh dengan menjumlahkan seluruh hasil perkalian antar rating (yang dapat dibandingkan lintas attribut) dan bobot tiap attribut. rating tiap atribut haruslah bebas dimensi dalam arti telah melewati proses normalisasi sebelumnya.\n\nMetode SAW sering juga dikenal istilah metode penjumlahan terbobot. Konsep dasar metode SAW adalah mencari penjumlahan terbobot dari rating kinerja pada setiap alternatif pada semua atribut. Metode SAW membutuhkan proses normalisasi matriks keputusan (X) ke suatu skala yang dapat diperbandingkan dengan semua rating alternatif yang ada.\n</main>\n${o()}\n`,p={"/":c,welcome:{render:()=>m},kategori:s,tambahkategori:h,alternatif:r,tambahalternatif:u,laporan:d},b=new class{constructor(n){this.body=n}render(){const a=p[n.getPage()];this.body.innerHTML=a.render(),a.afterRender&&a.afterRender()}}(document.querySelector("body"));window.addEventListener("load",(()=>{b.render()})),window.addEventListener("hashchange",(()=>{b.render()}))})();